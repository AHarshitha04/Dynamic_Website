{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects files\\\\Main_Admin_Files\\\\EgradTutorAdmin_Uploader\\\\client\\\\src\\\\components\\\\UploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/UploadPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  // const[showselectexamsection,Setshowselectexamsection]=useState(true)\n  const [courses, setCourses] = useState([]);\n  const [exams, setExams] = useState([\"\"]);\n  const [sections, setSections] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [selectedExam, setSelectedExam] = useState(null);\n  const [selectedSection, setSelectedSection] = useState(\"\");\n  const [enableExamsMenu, setEnableExamsMenu] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:5001/courses\").then(res => {\n      setCourses(res.data);\n    }).catch(error => {\n      console.error(\"Error fetching courses:\", error);\n    });\n  }, []);\n  const fetchExamsAndSections = courseId => {\n    axios.get(`http://localhost:5001/sections/${courseId}`).then(res => {\n      setSections(res.data);\n      console.log(sections);\n    }).catch(error => {\n      console.error(\"Error fetching sections:\", error);\n    });\n  };\n  const handleCourseChange = event => {\n    const courseId = event.target.value;\n    setSelectedCourse(courseId);\n    setSelectedSection(null);\n    setSelectedExam(null);\n    setEnableExamsMenu(false);\n    fetchExamsAndSections(courseId);\n    console.log(\"Selected Course:\", courseId);\n  };\n  const [show1, setShow1] = useState(null);\n  const handleSectionChange = event => {\n    const sectionId = event.target.value;\n    setSelectedSection(sectionId);\n\n    // Enable the \"Exams\" menu only for specific section values\n    const isFirstSection = sectionId === \"1\";\n    const isSecondSection = sectionId === \"2\";\n    const isThirdSection = sectionId === \"3\";\n    const isFourthSection = sectionId === \"4\";\n    const isFiveSection = sectionId === \"5\";\n    const isSixthSection = sectionId === \"6\";\n\n    // Enable/disable exams menu based on the condition\n\n    setEnableExamsMenu(isThirdSection || isSixthSection);\n    if (isThirdSection || isSixthSection) {\n      setShow1(true);\n    } else {\n      setShow1(false);\n    }\n    if (isFirstSection || isSecondSection || isFourthSection || isFiveSection) {\n      const fetchExamsAndSections = courseId => {\n        axios.get(`http://localhost:5001/sections/${courseId}`).then(res => {\n          setSections(res.data);\n          console.log(\"Selected section:\", sectionId);\n          // console.log(sections);\n        }).catch(error => {\n          console.error(\"Error fetching sections:\", error);\n        });\n        axios.get(`http://localhost:5001/quiz_exams/${courseId}`).then(res => {\n          // setExams(res.data);\n          console.log(exams);\n        }).catch(error => {\n          console.error(\"Error fetching exams:\", error);\n        });\n        fetchExamsAndSections(selectedCourse);\n      };\n    } else if (isThirdSection || isSixthSection) {\n      // Fetch exams based on the selected course and section\n\n      const fetchExamsAndSections = courseId => {\n        axios.get(`http://localhost:5001/sections/${courseId}`).then(res => {\n          setSections(res.data);\n          console.log(sections);\n        }).catch(error => {\n          console.error(\"Error fetching sections:\", error);\n        });\n        axios.get(`http://localhost:5001/quiz_exams/${courseId}`).then(res => {\n          setExams(res.data);\n          console.log(exams);\n        }).catch(error => {\n          console.error(\"Error fetching exams:\", error);\n        });\n      };\n      fetchExamsAndSections(selectedCourse);\n      setExams([]);\n      setSections([]);\n    }\n    if (setExams == isFirstSection || isSecondSection || isFourthSection || isFiveSection) {\n      setSelectedExam(!exams);\n      const fetchExamsAndSections = courseId => {\n        axios.get(`http://localhost:5001/sections/${courseId}`).then(res => {\n          setSections(res.data);\n          console.log(sections);\n        }).catch(error => {\n          console.error(\"Error fetching sections:\", error);\n        });\n        axios.get(`http://localhost:5001/quiz_exams/${courseId}`).then(res => {\n          // setExams(res.data);\n\n          console.log(exams);\n        }).catch(error => {\n          console.error(\"Error fetching exams:\", error);\n        });\n      };\n      fetchExamsAndSections(selectedCourse);\n      setExams([]);\n      setSections([]);\n      // Setshowselectexamsection(false)\n      console.log(\"working\");\n    } else if (setExams == isSecondSection || isFirstSection || isFourthSection || isFiveSection) {\n      setSelectedExam(!exams);\n      const fetchExamsAndSections = courseId => {\n        axios.get(`http://localhost:5001/sections/${courseId}`).then(res => {\n          setSections(res.data);\n          console.log(sections);\n        }).catch(error => {\n          console.error(\"Error fetching sections:\", error);\n        });\n        axios.get(`http://localhost:5001/quiz_exams/${courseId}`).then(res => {\n          // setExams(res.data);\n\n          console.log(exams);\n        }).catch(error => {\n          console.error(\"Error fetching exams:\", error);\n        });\n      };\n      fetchExamsAndSections(selectedCourse);\n      setExams([]);\n      setSections([]);\n      // console.log(\"working\")\n    }\n  };\n\n  const handleExamChange = event => {\n    const examId = event.target.value;\n    setSelectedExam(examId);\n  };\n  const [image, setImage] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n  const handleUpload = async () => {\n    if (!selectedCourse || !selectedSection || !image) {\n      console.error(\"Please select course, section, and choose an image before uploading.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"course_id\", selectedCourse);\n    formData.append(\"section_id\", selectedSection);\n    try {\n      // Include exam_id in the formData if selectedSection is \"3\" or \"6\"\n      if ([\"3\", \"6\"].includes(selectedSection)) {\n        if (!selectedExam) {\n          console.error(\"Please select an exam for Course Exam Page.\");\n          return;\n        }\n        formData.append(\"exam_id\", selectedExam);\n      }\n\n      // Use a single route for both main page and course exam uploads\n      const response = await axios.post(\"http://localhost:5001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n          // \"Authorization\": \"Bearer YOUR_ACCESS_TOKEN\",\n        }\n      });\n\n      console.log(response.data);\n      setUploadStatus(\"success\");\n      // Update UI or perform other actions on successful upload\n    } catch (error) {\n      console.error(\"Error uploading image\", error);\n      setUploadStatus(\"error\");\n      // Handle error, show a message, etc.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Course\",\n        children: \"Course: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"CourseChange\",\n        onChange: handleCourseChange,\n        value: selectedCourse,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.course_id,\n          children: course.course_name\n        }, course.course_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Section\",\n        children: \"Section: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"SectionChange\",\n        onChange: handleSectionChange,\n        value: selectedSection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), sections.map(section => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: section.section_id,\n          children: section.section_name\n        }, section.section_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), show1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"Exam: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"state\",\n          onChange: handleExamChange,\n          value: selectedExam,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), exams.map(exam => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: exam.exam_id,\n            children: exam.exam_name\n          }, exam.exam_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [uploadStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: \"Successfully uploaded!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), uploadStatus === \"error\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Error uploading image. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"FilesListLink\",\n      to: \"/ImageFetching\",\n      children: \"Show Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"JDuuEZqjg+tLey7VXZMoZUIH6xQ=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","UploadPage","_s","courses","setCourses","exams","setExams","sections","setSections","selectedCourse","setSelectedCourse","selectedExam","setSelectedExam","selectedSection","setSelectedSection","enableExamsMenu","setEnableExamsMenu","get","then","res","data","catch","error","console","fetchExamsAndSections","courseId","log","handleCourseChange","event","target","value","show1","setShow1","handleSectionChange","sectionId","isFirstSection","isSecondSection","isThirdSection","isFourthSection","isFiveSection","isSixthSection","handleExamChange","examId","image","setImage","uploadStatus","setUploadStatus","handleFileChange","e","file","files","handleUpload","formData","FormData","append","includes","response","post","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","course","course_id","course_name","section","section_id","section_name","exam","exam_id","exam_name","type","onClick","style","color","to","_c","$RefreshReg$"],"sources":["D:/web projects files/Main_Admin_Files/EgradTutorAdmin_Uploader/client/src/components/UploadPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/UploadPage.css\";\r\n\r\nconst UploadPage = () => {\r\n  // const[showselectexamsection,Setshowselectexamsection]=useState(true)\r\n  const [courses, setCourses] = useState([]);\r\n  const [exams, setExams] = useState([\"\"]);\r\n  const [sections, setSections] = useState([]);\r\n\r\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\r\n  const [selectedExam, setSelectedExam] = useState(null);\r\n  const [selectedSection, setSelectedSection] = useState(\"\");\r\n\r\n  const [enableExamsMenu, setEnableExamsMenu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5001/courses\")\r\n      .then((res) => {\r\n        setCourses(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching courses:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const fetchExamsAndSections = (courseId) => {\r\n    axios\r\n      .get(`http://localhost:5001/sections/${courseId}`)\r\n      .then((res) => {\r\n        setSections(res.data);\r\n        console.log(sections);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching sections:\", error);\r\n      });\r\n  };\r\n\r\n  const handleCourseChange = (event) => {\r\n    const courseId = event.target.value;\r\n    setSelectedCourse(courseId);\r\n    setSelectedSection(null);\r\n    setSelectedExam(null);\r\n    setEnableExamsMenu(false);\r\n    fetchExamsAndSections(courseId);\r\n    console.log(\"Selected Course:\", courseId);\r\n  };\r\n  const [show1, setShow1] = useState(null);\r\n  const handleSectionChange = (event) => {\r\n    const sectionId = event.target.value;\r\n    setSelectedSection(sectionId);\r\n\r\n    // Enable the \"Exams\" menu only for specific section values\r\n    const isFirstSection = sectionId === \"1\";\r\n    const isSecondSection = sectionId === \"2\";\r\n    const isThirdSection = sectionId === \"3\";\r\n    const isFourthSection = sectionId === \"4\";\r\n    const isFiveSection = sectionId === \"5\";\r\n    const isSixthSection = sectionId === \"6\";\r\n\r\n    // Enable/disable exams menu based on the condition\r\n\r\n    setEnableExamsMenu(isThirdSection || isSixthSection);\r\n\r\n    if (isThirdSection || isSixthSection) {\r\n      setShow1(true);\r\n    } else {\r\n      setShow1(false);\r\n    }\r\n\r\n    if (isFirstSection || isSecondSection || isFourthSection || isFiveSection) {\r\n      const fetchExamsAndSections = (courseId) => {\r\n        axios\r\n          .get(`http://localhost:5001/sections/${courseId}`)\r\n          .then((res) => {\r\n            setSections(res.data);\r\n            console.log(\"Selected section:\", sectionId);\r\n            // console.log(sections);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching sections:\", error);\r\n          });\r\n        axios\r\n          .get(`http://localhost:5001/quiz_exams/${courseId}`)\r\n          .then((res) => {\r\n            // setExams(res.data);\r\n            console.log(exams);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching exams:\", error);\r\n          });\r\n        fetchExamsAndSections(selectedCourse);\r\n      };\r\n    } else if (isThirdSection || isSixthSection) {\r\n      // Fetch exams based on the selected course and section\r\n\r\n      const fetchExamsAndSections = (courseId) => {\r\n        axios\r\n          .get(`http://localhost:5001/sections/${courseId}`)\r\n          .then((res) => {\r\n            setSections(res.data);\r\n            console.log(sections);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching sections:\", error);\r\n          });\r\n\r\n        axios\r\n          .get(`http://localhost:5001/quiz_exams/${courseId}`)\r\n          .then((res) => {\r\n            setExams(res.data);\r\n\r\n            console.log(exams);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching exams:\", error);\r\n          });\r\n      };\r\n      fetchExamsAndSections(selectedCourse);\r\n      setExams([]);\r\n      setSections([]);\r\n    }\r\n\r\n    if (\r\n      setExams == isFirstSection ||\r\n      isSecondSection ||\r\n      isFourthSection ||\r\n      isFiveSection\r\n    ) {\r\n      setSelectedExam(!exams);\r\n\r\n      const fetchExamsAndSections = (courseId) => {\r\n        axios\r\n          .get(`http://localhost:5001/sections/${courseId}`)\r\n          .then((res) => {\r\n            setSections(res.data);\r\n            console.log(sections);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching sections:\", error);\r\n          });\r\n\r\n        axios\r\n          .get(`http://localhost:5001/quiz_exams/${courseId}`)\r\n          .then((res) => {\r\n            // setExams(res.data);\r\n\r\n            console.log(exams);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching exams:\", error);\r\n          });\r\n      };\r\n      fetchExamsAndSections(selectedCourse);\r\n      setExams([]);\r\n      setSections([]);\r\n      // Setshowselectexamsection(false)\r\n      console.log(\"working\");\r\n    } else if (\r\n      setExams == isSecondSection ||\r\n      isFirstSection ||\r\n      isFourthSection ||\r\n      isFiveSection\r\n    ) {\r\n      setSelectedExam(!exams);\r\n\r\n      const fetchExamsAndSections = (courseId) => {\r\n        axios\r\n          .get(`http://localhost:5001/sections/${courseId}`)\r\n          .then((res) => {\r\n            setSections(res.data);\r\n            console.log(sections);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching sections:\", error);\r\n          });\r\n        axios\r\n          .get(`http://localhost:5001/quiz_exams/${courseId}`)\r\n          .then((res) => {\r\n            // setExams(res.data);\r\n\r\n            console.log(exams);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching exams:\", error);\r\n          });\r\n      };\r\n      fetchExamsAndSections(selectedCourse);\r\n      setExams([]);\r\n      setSections([]);\r\n      // console.log(\"working\")\r\n    }\r\n  };\r\n\r\n  const handleExamChange = (event) => {\r\n    const examId = event.target.value;\r\n    setSelectedExam(examId);\r\n  };\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImage(file);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedCourse || !selectedSection || !image) {\r\n      console.error(\r\n        \"Please select course, section, and choose an image before uploading.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    formData.append(\"course_id\", selectedCourse);\r\n    formData.append(\"section_id\", selectedSection);\r\n\r\n    try {\r\n      // Include exam_id in the formData if selectedSection is \"3\" or \"6\"\r\n      if ([\"3\", \"6\"].includes(selectedSection)) {\r\n        if (!selectedExam) {\r\n          console.error(\"Please select an exam for Course Exam Page.\");\r\n          return;\r\n        }\r\n        formData.append(\"exam_id\", selectedExam);\r\n      }\r\n\r\n      // Use a single route for both main page and course exam uploads\r\n      const response = await axios.post(\r\n        \"http://localhost:5001/upload\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            // \"Authorization\": \"Bearer YOUR_ACCESS_TOKEN\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(response.data);\r\n      setUploadStatus(\"success\");\r\n      // Update UI or perform other actions on successful upload\r\n    } catch (error) {\r\n      console.error(\"Error uploading image\", error);\r\n      setUploadStatus(\"error\");\r\n      // Handle error, show a message, etc.\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div>\r\n        <h3>Upload Images</h3>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"Course\">Course: </label>\r\n        <select\r\n          id=\"CourseChange\"\r\n          onChange={handleCourseChange}\r\n          value={selectedCourse}\r\n        >\r\n          <option value=\"\">Select Course</option>\r\n          {courses.map((course) => (\r\n            <option key={course.course_id} value={course.course_id}>\r\n              {course.course_name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"Section\">Section: </label>\r\n        <select\r\n          id=\"SectionChange\"\r\n          onChange={handleSectionChange}\r\n          value={selectedSection}\r\n        >\r\n          <option value=\"\">Select Section</option>\r\n          {sections.map((section) => (\r\n            <option key={section.section_id} value={section.section_id}>\r\n              {section.section_name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {show1 ? (\r\n          <div>\r\n            <label htmlFor=\"state\">Exam: </label>\r\n            <select id=\"state\" onChange={handleExamChange} value={selectedExam}>\r\n              <option value=\"\">Select Exam</option>\r\n              {exams.map((exam) => (\r\n                <option key={exam.exam_id} value={exam.exam_id}>\r\n                  {exam.exam_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <br />\r\n          </div>\r\n        ) : null}\r\n\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload Image</button>\r\n      </div>\r\n      \r\n      <div>\r\n        {uploadStatus === \"success\" && (\r\n          <p style={{ color: \"green\" }}>Successfully uploaded!</p>\r\n        )}\r\n        {uploadStatus === \"error\" && (\r\n          <p style={{ color: \"red\" }}>\r\n            Error uploading image. Please try again.\r\n          </p>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <Link className=\"FilesListLink\" to={\"/ImageFetching\"}>\r\n        Show Uploaded Files\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}